//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CountryService
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService")]
    public partial class faultBean
    {
        
        private string fcField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string FC
        {
            get
            {
                return this.fcField;
            }
            set
            {
                this.fcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService")]
    public partial class countryDto
    {
        
        private string cOUNTRYCODEField;
        
        private string cOUNTRYNAMEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string COUNTRYCODE
        {
            get
            {
                return this.cOUNTRYCODEField;
            }
            set
            {
                this.cOUNTRYCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string COUNTRYNAME
        {
            get
            {
                return this.cOUNTRYNAMEField;
            }
            set
            {
                this.cOUNTRYNAMEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService")]
    public partial class countryListServiceResponse
    {
        
        private countryDto[] cOUNTRYLISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("COUNTRY", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public countryDto[] COUNTRYLIST
        {
            get
            {
                return this.cOUNTRYLISTField;
            }
            set
            {
                this.cOUNTRYLISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService")]
    public partial class countryListServiceRequest
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService", ConfigurationName="CountryService.CountryListService")]
    public interface CountryListService
    {
        
        // CODEGEN: Generating message contract since the operation getCountryList is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/CountryListService/CountryListService/getCountryListReque" +
            "st", ReplyAction="http://dtts.sfda.gov.sa/CountryListService/CountryListService/getCountryListRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CountryService.faultBean), Action="http://dtts.sfda.gov.sa/CountryListService/CountryListService/getCountryList/Faul" +
            "t/ServiceError", Name="ServiceError")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CountryService.getCountryListResponse getCountryList(CountryService.getCountryListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/CountryListService/CountryListService/getCountryListReque" +
            "st", ReplyAction="http://dtts.sfda.gov.sa/CountryListService/CountryListService/getCountryListRespo" +
            "nse")]
        System.Threading.Tasks.Task<CountryService.getCountryListResponse> getCountryListAsync(CountryService.getCountryListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCountryListRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CountryService.countryListServiceRequest CountryListServiceRequest;
        
        public getCountryListRequest()
        {
        }
        
        public getCountryListRequest(CountryService.countryListServiceRequest CountryListServiceRequest)
        {
            this.CountryListServiceRequest = CountryListServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCountryListResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/CountryListService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CountryService.countryListServiceResponse CountryListServiceResponse;
        
        public getCountryListResponse()
        {
        }
        
        public getCountryListResponse(CountryService.countryListServiceResponse CountryListServiceResponse)
        {
            this.CountryListServiceResponse = CountryListServiceResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface CountryListServiceChannel : CountryService.CountryListService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class CountryListServiceClient : System.ServiceModel.ClientBase<CountryService.CountryListService>, CountryService.CountryListService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CountryListServiceClient() : 
                base(CountryListServiceClient.GetDefaultBinding(), CountryListServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.CountryListService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountryListServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CountryListServiceClient.GetBindingForEndpoint(endpointConfiguration), CountryListServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountryListServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CountryListServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountryListServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CountryListServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountryListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CountryService.getCountryListResponse CountryService.CountryListService.getCountryList(CountryService.getCountryListRequest request)
        {
            return base.Channel.getCountryList(request);
        }
        
        public CountryService.countryListServiceResponse getCountryList(CountryService.countryListServiceRequest CountryListServiceRequest)
        {
            CountryService.getCountryListRequest inValue = new CountryService.getCountryListRequest();
            inValue.CountryListServiceRequest = CountryListServiceRequest;
            CountryService.getCountryListResponse retVal = ((CountryService.CountryListService)(this)).getCountryList(inValue);
            return retVal.CountryListServiceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CountryService.getCountryListResponse> CountryService.CountryListService.getCountryListAsync(CountryService.getCountryListRequest request)
        {
            return base.Channel.getCountryListAsync(request);
        }
        
        public System.Threading.Tasks.Task<CountryService.getCountryListResponse> getCountryListAsync(CountryService.countryListServiceRequest CountryListServiceRequest)
        {
            CountryService.getCountryListRequest inValue = new CountryService.getCountryListRequest();
            inValue.CountryListServiceRequest = CountryListServiceRequest;
            return ((CountryService.CountryListService)(this)).getCountryListAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CountryListService))
            {
                //System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding(System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly);
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Basic;
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;

                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CountryListService))
            {
                return new System.ServiceModel.EndpointAddress("http://tandtwstest.sfda.gov.sa:8080/ws/CountryListService/CountryListService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CountryListServiceClient.GetBindingForEndpoint(EndpointConfiguration.CountryListService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CountryListServiceClient.GetEndpointAddress(EndpointConfiguration.CountryListService);
        }
        
        public enum EndpointConfiguration
        {
            
            CountryListService,
        }
    }
}
