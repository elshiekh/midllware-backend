//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ErrorCodeService
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService")]
    public partial class faultBean
    {
        
        private string fcField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string FC
        {
            get
            {
                return this.fcField;
            }
            set
            {
                this.fcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService")]
    public partial class errorDescDto
    {
        
        private string lANGUAGEField;
        
        private string dESCRIPTIONField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LANGUAGE
        {
            get
            {
                return this.lANGUAGEField;
            }
            set
            {
                this.lANGUAGEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string DESCRIPTION
        {
            get
            {
                return this.dESCRIPTIONField;
            }
            set
            {
                this.dESCRIPTIONField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService")]
    public partial class errorDto
    {
        
        private string cODEField;
        
        private errorDescDto[] eRRORCODEDESCField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string CODE
        {
            get
            {
                return this.cODEField;
            }
            set
            {
                this.cODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ERRORCODEDESC", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public errorDescDto[] ERRORCODEDESC
        {
            get
            {
                return this.eRRORCODEDESCField;
            }
            set
            {
                this.eRRORCODEDESCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService")]
    public partial class errorCodeListServiceResponse
    {
        
        private errorDto[] eRRORCODELISTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ERRORCODE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public errorDto[] ERRORCODELIST
        {
            get
            {
                return this.eRRORCODELISTField;
            }
            set
            {
                this.eRRORCODELISTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService")]
    public partial class errorCodeListServiceRequest
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService", ConfigurationName="ErrorCodeService.ErrorCodeListService")]
    public interface ErrorCodeListService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/ErrorCodeListService/ErrorCodeListService/getErrorCodeLis" +
            "tRequest", ReplyAction="http://dtts.sfda.gov.sa/ErrorCodeListService/ErrorCodeListService/getErrorCodeLis" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ErrorCodeService.faultBean), Action="http://dtts.sfda.gov.sa/ErrorCodeListService/ErrorCodeListService/getErrorCodeLis" +
            "t/Fault/ServiceError", Name="ServiceError")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ErrorCodeService.getErrorCodeListResponse getErrorCodeList(ErrorCodeService.getErrorCodeListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/ErrorCodeListService/ErrorCodeListService/getErrorCodeLis" +
            "tRequest", ReplyAction="http://dtts.sfda.gov.sa/ErrorCodeListService/ErrorCodeListService/getErrorCodeLis" +
            "tResponse")]
        System.Threading.Tasks.Task<ErrorCodeService.getErrorCodeListResponse> getErrorCodeListAsync(ErrorCodeService.getErrorCodeListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getErrorCodeListRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ErrorCodeService.errorCodeListServiceRequest ErrorCodeListServiceRequest;
        
        public getErrorCodeListRequest()
        {
        }
        
        public getErrorCodeListRequest(ErrorCodeService.errorCodeListServiceRequest ErrorCodeListServiceRequest)
        {
            this.ErrorCodeListServiceRequest = ErrorCodeListServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getErrorCodeListResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/ErrorCodeListService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ErrorCodeService.errorCodeListServiceResponse ErrorCodeListServiceResponse;
        
        public getErrorCodeListResponse()
        {
        }
        
        public getErrorCodeListResponse(ErrorCodeService.errorCodeListServiceResponse ErrorCodeListServiceResponse)
        {
            this.ErrorCodeListServiceResponse = ErrorCodeListServiceResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ErrorCodeListServiceChannel : ErrorCodeService.ErrorCodeListService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ErrorCodeListServiceClient : System.ServiceModel.ClientBase<ErrorCodeService.ErrorCodeListService>, ErrorCodeService.ErrorCodeListService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ErrorCodeListServiceClient() : 
                base(ErrorCodeListServiceClient.GetDefaultBinding(), ErrorCodeListServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ErrorCodeListService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErrorCodeListServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ErrorCodeListServiceClient.GetBindingForEndpoint(endpointConfiguration), ErrorCodeListServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErrorCodeListServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ErrorCodeListServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErrorCodeListServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ErrorCodeListServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErrorCodeListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ErrorCodeService.getErrorCodeListResponse getErrorCodeList(ErrorCodeService.getErrorCodeListRequest request)
        {
            return base.Channel.getErrorCodeList(request);
        }
        
        public System.Threading.Tasks.Task<ErrorCodeService.getErrorCodeListResponse> getErrorCodeListAsync(ErrorCodeService.getErrorCodeListRequest request)
        {
            return base.Channel.getErrorCodeListAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ErrorCodeListService))
            {
                // System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding(System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly);
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Basic;
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ErrorCodeListService))
            {
                return new System.ServiceModel.EndpointAddress("http://tandtwstest.sfda.gov.sa:8080/ws/ErrorCodeListService/ErrorCodeListService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ErrorCodeListServiceClient.GetBindingForEndpoint(EndpointConfiguration.ErrorCodeListService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ErrorCodeListServiceClient.GetEndpointAddress(EndpointConfiguration.ErrorCodeListService);
        }
        
        public enum EndpointConfiguration
        {
            
            ErrorCodeListService,
        }
    }
}
