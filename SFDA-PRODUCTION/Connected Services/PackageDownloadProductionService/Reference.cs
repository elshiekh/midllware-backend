//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PackageDownloadProductionService
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService")]
    public partial class faultBean
    {
        
        private string fcField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string FC
        {
            get
            {
                return this.fcField;
            }
            set
            {
                this.fcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService")]
    public partial class packageDownloadServiceResponse
    {
        
        private string mD5CHECKSUMField;
        
        private byte[] fILEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MD5CHECKSUM
        {
            get
            {
                return this.mD5CHECKSUMField;
            }
            set
            {
                this.mD5CHECKSUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=1)]
        public byte[] FILE
        {
            get
            {
                return this.fILEField;
            }
            set
            {
                this.fILEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService")]
    public partial class packageDownloadServiceRequest
    {
        
        private long tRANSFERIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long TRANSFERID
        {
            get
            {
                return this.tRANSFERIDField;
            }
            set
            {
                this.tRANSFERIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService", ConfigurationName="PackageDownloadProductionService.PackageDownloadService")]
    public interface PackageDownloadService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/PackageDownloadService/PackageDownloadService/downloadFil" +
            "eRequest", ReplyAction="http://dtts.sfda.gov.sa/PackageDownloadService/PackageDownloadService/downloadFil" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PackageDownloadProductionService.faultBean), Action="http://dtts.sfda.gov.sa/PackageDownloadService/PackageDownloadService/downloadFil" +
            "e/Fault/ServiceError", Name="ServiceError")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PackageDownloadProductionService.downloadFileResponse downloadFile(PackageDownloadProductionService.downloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dtts.sfda.gov.sa/PackageDownloadService/PackageDownloadService/downloadFil" +
            "eRequest", ReplyAction="http://dtts.sfda.gov.sa/PackageDownloadService/PackageDownloadService/downloadFil" +
            "eResponse")]
        System.Threading.Tasks.Task<PackageDownloadProductionService.downloadFileResponse> downloadFileAsync(PackageDownloadProductionService.downloadFileRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PackageDownloadProductionService.packageDownloadServiceRequest PackageDownloadServiceRequest;
        
        public downloadFileRequest()
        {
        }
        
        public downloadFileRequest(PackageDownloadProductionService.packageDownloadServiceRequest PackageDownloadServiceRequest)
        {
            this.PackageDownloadServiceRequest = PackageDownloadServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dtts.sfda.gov.sa/PackageDownloadService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PackageDownloadProductionService.packageDownloadServiceResponse PackageDownloadServiceResponse;
        
        public downloadFileResponse()
        {
        }
        
        public downloadFileResponse(PackageDownloadProductionService.packageDownloadServiceResponse PackageDownloadServiceResponse)
        {
            this.PackageDownloadServiceResponse = PackageDownloadServiceResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface PackageDownloadServiceChannel : PackageDownloadProductionService.PackageDownloadService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PackageDownloadServiceClient : System.ServiceModel.ClientBase<PackageDownloadProductionService.PackageDownloadService>, PackageDownloadProductionService.PackageDownloadService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PackageDownloadServiceClient() : 
                base(PackageDownloadServiceClient.GetDefaultBinding(), PackageDownloadServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.PackageDownloadService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PackageDownloadServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PackageDownloadServiceClient.GetBindingForEndpoint(endpointConfiguration), PackageDownloadServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PackageDownloadServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PackageDownloadServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PackageDownloadServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PackageDownloadServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PackageDownloadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public PackageDownloadProductionService.downloadFileResponse downloadFile(PackageDownloadProductionService.downloadFileRequest request)
        {
            return base.Channel.downloadFile(request);
        }
        
        public System.Threading.Tasks.Task<PackageDownloadProductionService.downloadFileResponse> downloadFileAsync(PackageDownloadProductionService.downloadFileRequest request)
        {
            return base.Channel.downloadFileAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PackageDownloadService))
            {
                //ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                System.ServiceModel.BasicHttpsBinding result = new System.ServiceModel.BasicHttpsBinding(System.ServiceModel.BasicHttpsSecurityMode.Transport);
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Basic;
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
               // result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PackageDownloadService))
            {
                return new System.ServiceModel.EndpointAddress("https://rsd.sfda.gov.sa/ws/PackageDownloadService/PackageDownloadService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PackageDownloadServiceClient.GetBindingForEndpoint(EndpointConfiguration.PackageDownloadService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PackageDownloadServiceClient.GetEndpointAddress(EndpointConfiguration.PackageDownloadService);
        }
        
        public enum EndpointConfiguration
        {
            
            PackageDownloadService,
        }
    }
}
